name: Deploy all project

on:
  push:
    branches: [ master ]

jobs:
  build-deploy-gae:
    name: Build and deploy front reverse proxy servre to gae
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.16.0]
        go-version: [1.13]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: npm install, build
        working-directory: ./front
        run: |
          npm install
          npm run build
      - name: move static files
        run: |
          mv ./front/dist ./reverseProxyServer/dist
      - name: Go Get dependencies
        working-directory: ./reverseProxyServer
        run: |
          go get -v -t -d ./...
          go mod edit -replace=github.com/${GITHUB_REPOSITORY}/reverseProxyServer=./
      - name: Deploy to GAE
        working-directory: ./reverseProxyServer
        run: |
          export VPC_ACCESS_CONNECTOR_NAME=projects/${GOOGLE_PROJECT_ID}/locations/${GOOGLE_COMPUTE_REGION}/connectors/access-connector
          chmod +x extcat.sh
          cat ./app.tpl.yaml | ./extcat.sh > ./app.yaml
          echo ${GOOGLE_SERVICE_KEY} | base64 -d > ./service_key.json
          sudo apt-get install google-cloud-sdk-app-engine-go
          echo 'github-actions@${GOOGLE_PROJECT_ID}.iam.gserviceaccount.com' | gcloud auth activate-service-account --key-file ./service_key.json
          gcloud app deploy app.yaml --project ${GOOGLE_PROJECT_ID}
        env:
          GOOGLE_SERVICE_KEY: ${{ secrets.GOOGLE_SERVICE_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_COMPUTE_REGION: ${{ secrets.GOOGLE_COMPUTE_REGION }}

  deploy-gce:
    name: deploy docker-compose to gce
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_KEY_PUB: ${{ secrets.SSH_KEY_PUB }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo ${SSH_KEY} | base64 -d > ~/.ssh/my-ssh-key
          echo ${SSH_KEY_PUB} | base64 -d > ~/.ssh/my-ssh-key.pub
          chmod 600 ~/.ssh/my-ssh-key
      - name: Deploy api server
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/my-ssh-key
          ssh -o "StrictHostKeyChecking=no" -p ${SSH_PORT} ${SSH_USERNAME}@${SSH_HOST}  -i ~/.ssh/my-ssh-key 'bash -s' < deploy.sh https://${SSH_USERNAME}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}

